@using System.Data

@{
    var saldoData = ViewData["SaldoData"] as DataTable;
    decimal ostatecznesaldo = 0;
    decimal ostatecznesaldoeur = 0;
    decimal majatek = 0;
    string kursEuroString = "";
    string result = "";

    if (ViewContext.RouteData.Values["action"].ToString() != "ExChange")
    {


        if (saldoData.Rows.Count > 0 && ViewData["SaldoData"] != null && ViewData["wydatkizachcianki"] != null && ViewData["wydatkijedzenie"]
        != null && ViewData["wydatkizdrowie"] != null && ViewData["wydatkizdrowieeur"] != null && ViewData["wydatkijedzenieeur"]
        != null && ViewData["wydatkizachciankieur"] != null && ViewData["przelewwychodzacyzl"] != null && ViewData["przelewprzychodzacyzl"] != null
        && ViewData["przelewwychodzacyeuro"] != null && ViewData["przelewprzychodzacyeuro"] != null)
        {

            decimal saldo = (decimal)saldoData.Rows[0]["PLN"];
            decimal saldoeur = (decimal)saldoData.Rows[0]["EURO"];
            decimal wydatkizachcianki = (decimal)ViewData["wydatkizachcianki"];
            decimal wydatkijedzenie = (decimal)ViewData["wydatkijedzenie"];
            decimal wydatkizdrowie = (decimal)ViewData["wydatkizdrowie"];

            decimal wydatkizachciankieur = (decimal)ViewData["wydatkizachciankieur"];
            decimal wydatkijedzenieeur = (decimal)ViewData["wydatkijedzenieeur"];
            decimal wydatkizdrowieeur = (decimal)ViewData["wydatkizdrowieeur"];
            string kursEuroStringAll = (string)ViewData["KursEuro"];
            kursEuroString = kursEuroStringAll.Substring(15, 12);
            kursEuroString = kursEuroString.Remove(1, 1).Insert(1, ",").Remove(4, 8);


            decimal kursEuro = Convert.ToDecimal(kursEuroString);

            //Przelewy
            decimal przelewywychodzacezl = (decimal)ViewData["przelewwychodzacyzl"];
            decimal przelewprzychodzacyzl = (decimal)ViewData["przelewprzychodzacyzl"];
            decimal przelewywychodzaceeuro = (decimal)ViewData["przelewwychodzacyeuro"];
            decimal przelewprzychodzacyeuro = (decimal)ViewData["przelewprzychodzacyeuro"];
            ostatecznesaldo = saldo - wydatkizachcianki - wydatkijedzenie - wydatkizdrowie + przelewprzychodzacyzl - przelewywychodzacezl;
            ostatecznesaldoeur = saldoeur - wydatkizachciankieur - wydatkijedzenieeur
            - wydatkizdrowieeur + przelewprzychodzacyeuro - przelewywychodzaceeuro;

            majatek = ostatecznesaldo + ostatecznesaldoeur * kursEuro;
            result = majatek.ToString("0.00");
        }
    }
}

<!DOCTYPE html>
<html lang="pl">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - System monitorowania wydatków</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/WebApplication1.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="gora">
                <div class="headermoj2">
                    @if (ViewContext.RouteData.Values["action"].ToString() != "Form" && result != null && kursEuroString != null && !string.IsNullOrWhiteSpace(result.ToString()))
                    {
                
                            <div class="saldoplndiv">Majątek: @result Zł</div>
                            <div class="saldoeurdiv">Kurs Euro: @kursEuroString Zł</div>
                   
                    }
                     </div>
                <div class="headermoj1">
                        <div class="container-fluid">
                            <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">System monitorowania wydatków</a>
                        </div>

                    @if (ViewContext.RouteData.Values["action"].ToString() != "Form")
                    {
                        <div class="form">
                            <a class="navbar-brand-form" asp-area="" asp-controller="Home" asp-action="Form">Dodaj transakcje</a>
                        </div>
                        
                    }
                    @if(saldoData != null && saldoData.Rows.Count > 0) {

                    
                        <div class="form">
                            <a class="navbar-brand-form-second" asp-area="" asp-controller="Home" asp-action="ExChange">Wymień walutę</a>
                        </div>
                    }
                </div>
                <div class="headermoj2">
                @if (ViewContext.RouteData.Values["action"].ToString() != "Form" && (saldoData != null && saldoData.Rows.Count > 0))
                {
                    
                                    <div class="saldoplndiv">Saldo: @ostatecznesaldo Zł</div>
                                <div class="saldoeurdiv">Saldo: @ostatecznesaldoeur €</div>
                    
                }
                    </div>
            </div>
        </nav>
        
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2024 - Witold Woźniczka - <a>Zadanie ASP.NET</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
