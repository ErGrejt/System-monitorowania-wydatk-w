@using System.Data
@{
	var BalanceData = ViewData["BalanceData"] as List<Balance>;
	decimal BalanceLast = 0;
	decimal BalanceLastEur = 0;
	decimal wealth = 0;
	string EuroRateString = "";
	string result = "";
	if (ViewContext.RouteData.Values["action"].ToString() != "ExChange")
	{
		if (ViewData["BalanceData"] != null && BalanceData.Count > 0 && ViewData["ExpensesOthers"] != null && ViewData["ExpensesFood"]
		!= null && ViewData["ExpensesHealth"] != null && ViewData["ExpensesHealthEur"] != null && ViewData["ExpensesFoodEur"]
		!= null && ViewData["ExpensesOthersEur"] != null && ViewData["ExpensesOutPln"] != null && ViewData["ExpensesInPln"] != null
		&& ViewData["ExpensesOutEur"] != null && ViewData["ExpensesInEur"] != null)
		{
			decimal Balance = (decimal)BalanceData[0].PLN;
			decimal BalanceEur = (decimal)BalanceData[0].EURO;
			decimal ExpensesOthers = (decimal)ViewData["ExpensesOthers"];
			decimal ExpensesFood = (decimal)ViewData["ExpensesFood"];
			decimal ExpensesHealth = (decimal)ViewData["ExpensesHealth"];

			decimal ExpensesOthersEur = (decimal)ViewData["ExpensesOthersEur"];
			decimal ExpensesFoodEur = (decimal)ViewData["ExpensesFoodEur"];
			decimal ExpensesHealthEur = (decimal)ViewData["ExpensesHealthEur"];
			EuroRateString = (string)ViewData["EuroRate"];
			decimal EuroRate = Convert.ToDecimal(EuroRateString);
			decimal ExpensesOutPln = (decimal)ViewData["ExpensesOutPln"];
			decimal ExpensesInPln = (decimal)ViewData["ExpensesInPln"];
			decimal ExpensesOutEur = (decimal)ViewData["ExpensesOutEur"];
			decimal ExpensesInEur = (decimal)ViewData["ExpensesInEur"];
			BalanceLast = Balance - ExpensesOthers - ExpensesFood - ExpensesHealth + ExpensesInPln - ExpensesOutPln;
			BalanceLastEur = BalanceEur - ExpensesOthersEur - ExpensesFoodEur
			- ExpensesHealthEur + ExpensesInEur - ExpensesOutEur;
			wealth = BalanceLast + BalanceLastEur * EuroRate;
			result = wealth.ToString("0.00");
		}
	}
}
<!DOCTYPE html>
<html lang="pl">
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>@ViewData["Title"] - System monitorowania wydatków</title>
	<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
	<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
	<link rel="stylesheet" href="~/WebApplication1.styles.css" asp-append-version="true" />
</head>
<body>
	<header>
		<nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
			<div class="Up">
				<div class="MyHeader2">
					@if (ViewContext.RouteData.Values["action"].ToString() != "Form" && result != null && EuroRateString != null && !string.IsNullOrWhiteSpace(result.ToString()))
					{

						<div class="Balanceplndiv">Majątek: @result Zł</div>
						<div class="Balanceeurdiv">Kurs Euro: @EuroRateString Zł</div>

					}
				</div>
				<div class="MyHeader1">
					<div class="container-fluid">
						@if (ViewContext.RouteData.Values["action"].ToString() != "Login" && ViewContext.RouteData.Values["action"].ToString() != "Register")
						{
							<a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">System monitorowania wydatków</a>
						}
						else
						{
							<a class="navbar-brand">System monitorowania wydatków</a>
						}

					</div>

					@if (ViewContext.RouteData.Values["action"].ToString() == "Index" || ViewContext.RouteData.Values["action"].ToString() == "ExChange" ||
										ViewContext.RouteData.Values["action"].ToString() == "AddPlnExchange" ||
										ViewContext.RouteData.Values["action"].ToString() == "AddEurExchange")
					{
						<div class="form">
							<a class="navbar-brand-form" asp-area="" asp-controller="Home" asp-action="Form">Dodaj transakcje</a>
						</div>

					}
					@if (BalanceData != null && BalanceData.Count > 0 || ViewContext.RouteData.Values["action"].ToString() == "Form" ||
										ViewContext.RouteData.Values["action"].ToString() == "AddTransaction")
					{


						<div class="form">
							<a class="navbar-brand-form-second" asp-area="" asp-controller="Home" asp-action="ExChange">Wymień walutę</a>
						</div>
					}
				</div>
				<div class="headermoj2">
					@if (ViewContext.RouteData.Values["action"].ToString() != "Form" && (BalanceData != null && BalanceData.Count > 0))
					{

						<div class="Balanceplndiv">Saldo: @BalanceLast Zł</div>
						<div class="Balanceeurdiv">Saldo: @BalanceLastEur €</div>

					}
				</div>
			</div>
		</nav>
	</header>
	<div class="container">
		<main role="main" class="pb-3">
			@RenderBody()
		</main>
	</div>
	<footer class="border-top footer text-muted">
		<div class="myfooter">
			<div class="kontener footerleft">
				&copy; 2024 - Witold Woźniczka - <a>Zadanie ASP.NET</a>
			</div>
			<div class="kontener footerright">

				@if (ViewContext.RouteData.Values["action"].ToString() == "Index" ||
									ViewContext.RouteData.Values["action"].ToString() == "ExChange" ||
									ViewContext.RouteData.Values["action"].ToString() == "Form" ||
									ViewContext.RouteData.Values["action"].ToString() == "AddBalance" ||
									ViewContext.RouteData.Values["action"].ToString() == "FormBalance" ||
									ViewContext.RouteData.Values["action"].ToString() == "AddTransaction" ||
									ViewContext.RouteData.Values["action"].ToString() == "AddPlnExchange" ||
									ViewContext.RouteData.Values["action"].ToString() == "AddEurExchange")
				{
					<a class="logreg" asp-area="" asp-controller="Function" asp-action="Logout">Wyloguj się</a>
				}
			</div>
		</div>
	</footer>
	<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
	<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
	@await RenderSectionAsync("Scripts", required: false)
</body>
</html>
